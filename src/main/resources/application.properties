server.port=8881

logging.level.com.github.hpgrahsl.kafka=debug
live.demo.instance.id=1

#kafka consumer configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.client-id=client-${live.demo.instance.id}
spring.kafka.consumer.group-id=${spring.kafka.streams.application-id}-group-${live.demo.instance.id}
spring.kafka.consumer.auto-offset-reset=earliest

#kafka streams configuration (spring defined)
spring.kafka.streams.application-id=emojitracker-00
spring.kafka.streams.bootstrap-servers=localhost:9092
spring.kafka.streams.client-id=client-${live.demo.instance.id}
spring.kafka.streams.state-dir=/tmp/kafka-streams-${live.demo.instance.id}
spring.kafka.streams.cache-max-size-buffering=1KB

#kafka streams configuration (self defined)
spring.kafka.streams.properties.application.server=localhost:${server.port}
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.processing.guarantee=at_least_once
spring.kafka.streams.properties.commit.interval.ms=500

#kafka custom streams app configuration
spring.kafka.streams.properties.tweets-topic=tweets
spring.kafka.streams.properties.emoji-tweets-topic=${spring.kafka.streams.application-id}-emoji2tweets
spring.kafka.streams.properties.state-store-emoji-counts=emoji-counts
spring.kafka.streams.properties.state-store-emojis-top-n=top-n-emojis
spring.kafka.streams.properties.emoji-count-top-n=100
spring.kafka.streams.properties.changelog-emoji-counts=${spring.kafka.streams.application-id}-${spring.kafka.streams.properties.state-store-emoji-counts}-changelog
spring.kafka.streams.properties.state-store-persistence-type=in-memory
